CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE MEMORY TABLE OBJECTS_TAB(OID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,SYNOPSIS VARCHAR(80),DESCRIPTION VARCHAR(400),ID VARCHAR(30),CLASS_TYPE VARCHAR(200),OWNER VARCHAR(30),CREATE_TIME TIMESTAMP,MODIFY_TIME TIMESTAMP,XML VARCHAR)
CREATE MEMORY TABLE TESTCASES_TAB(OID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,CLUSTERID VARCHAR(200),GROUPID VARCHAR(40),TESTID VARCHAR(40),SYNOPSIS VARCHAR(80),DESCRIPTION VARCHAR(400))
CREATE MEMORY TABLE ASSERTTYPES_TAB(OID INTEGER NOT NULL PRIMARY KEY,NAME VARCHAR(20))
CREATE MEMORY TABLE ACTIONTYPES_TAB(OID INTEGER NOT NULL,ASSERTTYPE_OID INTEGER NOT NULL,NAME VARCHAR(20),PRIMARY KEY(OID,ASSERTTYPE_OID),CONSTRAINT FK_ACTIONTYPES_ASSERTTYPES FOREIGN KEY(ASSERTTYPE_OID) REFERENCES ASSERTTYPES_TAB(OID))
CREATE MEMORY TABLE ASSERTS_TAB(OID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,ACTION_OID INTEGER,ASSERTTYPE_OID INTEGER,DESCRIPTION VARCHAR(400),ID VARCHAR(30),CLASS_TYPE VARCHAR(200),TEST_OID INTEGER,CONSTRAINT FK_ASSERTS_ACTIONTYPES FOREIGN KEY(ACTION_OID,ASSERTTYPE_OID) REFERENCES ACTIONTYPES_TAB(OID,ASSERTTYPE_OID),CONSTRAINT FK_ASSERTS_TESTCASES FOREIGN KEY(TEST_OID) REFERENCES TESTCASES_TAB(OID))
CREATE MEMORY TABLE TESTDATA_TAB(TEST_OID INTEGER,OBJ_OID INTEGER,ID VARCHAR(30),CONSTRAINT FK_TESTDATA_OBJECTS FOREIGN KEY(OBJ_OID) REFERENCES OBJECTS_TAB(OID),CONSTRAINT FK_TESTDATA_TESTCASES FOREIGN KEY(TEST_OID) REFERENCES TESTCASES_TAB(OID))
CREATE MEMORY TABLE RELATIONS_TAB(FROM_OID INTEGER,NAME VARCHAR(20),TO_OID INTEGER)
ALTER TABLE OBJECTS_TAB ALTER COLUMN OID RESTART WITH 8
ALTER TABLE TESTCASES_TAB ALTER COLUMN OID RESTART WITH 6
ALTER TABLE ASSERTS_TAB ALTER COLUMN OID RESTART WITH 6
CREATE VIEW ASSERTS_VIEW (CLUSTERID,GROUPID,TESTID,COL_4,OTYPE,ID,TYPE,ACTION,ASSERT_OID) AS select tct.clusterid, tct.groupid, tct.testid, 'asserts', att.name otype, ast.id, ast.class_type type, act.name action, ast.oid assert_oid\u000d\u000afrom TESTCASES_TAB tct, ASSERTS_TAB ast, ACTIONTYPES_TAB act, ASSERTTYPES_TAB att\u000d\u000awhere tct.oid = ast.test_oid\u000d\u000aand att.oid = act.asserttype_oid\u000d\u000aand act.asserttype_oid = ast.asserttype_oid\u000d\u000aand act.oid = ast.action_oid
CREATE VIEW ASSERTOBJECTS_VIEW (ASSERT_OID,ID,TYPE,XML) AS select rel.to_oid assert_oid, obj.id, obj.class_type type, obj.xml \u000d\u000afrom RELATIONS_TAB rel, OBJECTS_TAB obj\u000d\u000awhere rel.name='assertObject' \u000d\u000aand rel.from_oid = obj.oid
CREATE VIEW TESTDATA_VIEW (CLUSTERID,GROUPID,TESTID,OGROUP,OTYPE,ID,CLASS_TYPE,ACTION,XML) AS select clusterid, groupid, testid, 'objs' ogroup, 'obj' otype, tcd.id, o.class_type, 'noaction' action, o.xml\u000d\u000afrom \u000d\u000a(select clusterid, groupid, testid, obj_oid, td.id\u000d\u000a  from TESTCASES_TAB tc, TESTDATA_TAB td\u000d\u000a  where\u000d\u000a  tc.oid = td.test_oid) tcd\u000d\u000a, OBJECTS_TAB o\u000d\u000awhere\u000d\u000atcd.obj_oid = o.oid\u000d\u000aUNION\u000d\u000aselect ass.clusterid, ass.groupid, ass.testid, 'asserts' ogroup, ass.otype, ass.id, ass.type, ass.action, aso.xml\u000d\u000afrom\u000d\u000aasserts_view ass RIGHT OUTER JOIN \u000d\u000aassertobjects_view aso\u000d\u000aON (ass.assert_oid = aso.assert_oid)\u000d\u000aorder by clusterid, groupid, testid, ogroup desc, otype DESC
CREATE USER SA PASSWORD ""
GRANT DBA TO SA
SET WRITE_DELAY 20
SET SCHEMA PUBLIC
INSERT INTO OBJECTS_TAB VALUES(1,'synopsis obj1','desc obj1','obj1','java.lang.String','jg','2006-02-21 11:36:21.351000000','2006-02-21 11:36:21.351000000','<obj id="obj1" type="java.lang.String">Hallo obj1</obj>')
INSERT INTO OBJECTS_TAB VALUES(2,'synopsis obj2','desc obj2','obj2','java.lang.String','jg','2006-02-21 11:36:21.361000000','2006-02-21 11:36:21.361000000','<obj id="obj2" type="java.lang.String">Hallo obj2</obj>')
INSERT INTO OBJECTS_TAB VALUES(3,'synopsis obj3','desc obj3','obj3','java.lang.String','jg','2006-02-21 11:36:21.371000000','2006-02-21 11:36:21.371000000','<obj id="obj3" type="java.lang.String">Hallo obj3</obj>')
INSERT INTO OBJECTS_TAB VALUES(4,'synopsis obj4','desc obj4','obj4','java.lang.String','jg','2006-02-21 11:36:21.371000000','2006-02-21 11:36:21.371000000','<obj id="obj4" type="java.lang.String">Hallo obj4</obj>')
INSERT INTO OBJECTS_TAB VALUES(5,'synopsis obj5','desc obj5','obj5','junitx.ddtunit.resources.SimpleVO','jg','2006-02-21 11:36:21.371000000','2006-02-21 11:36:21.371000000','<obj id="obj5" type="junitx.ddtunit.resources.SimpleVO" baseref="7">\u000d<stringValue>Hallo obj5</stringValue></obj>')
INSERT INTO OBJECTS_TAB VALUES(6,'synopsis obj6','desc obj6','obj6','java.lang.Exception','jg','2006-02-21 11:36:21.371000000','2006-02-21 11:36:21.371000000','<obj id="obj6" type="junitx.ddtunit.DDTException" hint="constructor">\u000d<item type="string">Hallo exception</item></obj>')
INSERT INTO OBJECTS_TAB VALUES(7,'synopsis obj7','desc obj7','obj7','junitx.ddtunit.resources.SimpleVO','jg','2006-02-21 11:36:21.371000000','2006-02-21 11:36:21.371000000','<obj id="obj5" type="junitx.ddtunit.resources.SimpleVO">\u000d<stringValue>Hallo obj7</stringValue><doubleValue>2.0</doubleValue><intValue>4711</intValue></obj>')
INSERT INTO TESTCASES_TAB VALUES(1,'SimpleDDTUnitTest','testRetrieveObjectData','firstObjTestCase','synopsis obj tc1','description obj tc1')
INSERT INTO TESTCASES_TAB VALUES(2,'SimpleDDTUnitTest','testRetrieveObjectData','secondObjTestCase','synopsis obj tc2','description obj tc2')
INSERT INTO TESTCASES_TAB VALUES(3,'SimpleDDTUnitTest','testRetrieveObjectData','thirdObjTestCase','synopsis obj tc3','description obj tc3')
INSERT INTO TESTCASES_TAB VALUES(4,'SimpleDDTUnitTest','testRetrieveAssertData','firstAssTestCase','synopsis ass tc1','description ass tc1')
INSERT INTO TESTCASES_TAB VALUES(5,'SimpleDDTUnitTest','testRetrieveAssertData','secondAssTestCase','synopsis ass tc2','description ass tc2')
INSERT INTO ASSERTTYPES_TAB VALUES(1,'assert')
INSERT INTO ASSERTTYPES_TAB VALUES(2,'exception')
INSERT INTO ACTIONTYPES_TAB VALUES(1,1,'isEqual')
INSERT INTO ACTIONTYPES_TAB VALUES(2,1,'isNotEqual')
INSERT INTO ACTIONTYPES_TAB VALUES(3,1,'isSame')
INSERT INTO ACTIONTYPES_TAB VALUES(4,1,'isNotSame')
INSERT INTO ACTIONTYPES_TAB VALUES(5,1,'isNull')
INSERT INTO ACTIONTYPES_TAB VALUES(6,1,'isNotNull')
INSERT INTO ACTIONTYPES_TAB VALUES(7,1,'isTrue')
INSERT INTO ACTIONTYPES_TAB VALUES(8,1,'isFalse')
INSERT INTO ACTIONTYPES_TAB VALUES(9,1,'isGT')
INSERT INTO ACTIONTYPES_TAB VALUES(10,1,'isNotGT')
INSERT INTO ACTIONTYPES_TAB VALUES(11,1,'isLT')
INSERT INTO ACTIONTYPES_TAB VALUES(12,1,'isNotLT')
INSERT INTO ACTIONTYPES_TAB VALUES(50,2,'isEqual')
INSERT INTO ACTIONTYPES_TAB VALUES(51,2,'isSimilar')
INSERT INTO ACTIONTYPES_TAB VALUES(52,2,'isInstanceOf')
INSERT INTO ASSERTS_TAB VALUES(1,1,1,'synopsis ass1','result','java.lang.String',1)
INSERT INTO ASSERTS_TAB VALUES(2,6,1,'synopsis ass2','result','java.lang.String',2)
INSERT INTO ASSERTS_TAB VALUES(3,1,1,'synopsis ass3','result','java.lang.String',3)
INSERT INTO ASSERTS_TAB VALUES(4,52,2,'synopsis ass4','result','junitx.ddtunit.DDTException',4)
INSERT INTO ASSERTS_TAB VALUES(5,1,1,'synopsis ass5','result','junitx.ddtunit.resources.SimpleVO',5)
INSERT INTO TESTDATA_TAB VALUES(1,1,'myObj')
INSERT INTO TESTDATA_TAB VALUES(2,2,'myObj')
INSERT INTO TESTDATA_TAB VALUES(3,3,'myObj')
INSERT INTO TESTDATA_TAB VALUES(4,4,'myObj')
INSERT INTO TESTDATA_TAB VALUES(5,5,'myObj')
INSERT INTO RELATIONS_TAB VALUES(6,'assertObject',4)
INSERT INTO RELATIONS_TAB VALUES(7,'baseObject',5)
INSERT INTO RELATIONS_TAB VALUES(3,'assertObject',3)
INSERT INTO RELATIONS_TAB VALUES(3,'assertObject',2)
INSERT INTO RELATIONS_TAB VALUES(1,'assertObject',1)
INSERT INTO RELATIONS_TAB VALUES(5,'assertObject',5)
